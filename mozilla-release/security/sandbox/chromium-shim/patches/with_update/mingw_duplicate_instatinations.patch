# HG changeset patch
# User Tom Ritter <tom@mozilla.com>
# Date 1488911037 0
#      Tue Mar 07 18:23:57 2017 +0000
# Node ID b198c0d01cada4ad84f09897d7fc15f0dc03ceea
# Parent  489e4a8d1628a79d07e1880c3b1818809515ba5f
Bug 1431801 Don't declare duplicate instantiations. r?bobowen

On MinGW, these typedefs are the same, and mingw complains about duplicate instantiations.
Rather than use -fpermissive, just comment out the second instantiation.

MozReview-Commit-ID: 5prsrStgwKY

diff --git a/security/sandbox/chromium/base/strings/utf_string_conversion_utils.cc b/security/sandbox/chromium/base/strings/utf_string_conversion_utils.cc
--- a/security/sandbox/chromium/base/strings/utf_string_conversion_utils.cc
+++ b/security/sandbox/chromium/base/strings/utf_string_conversion_utils.cc
@@ -117,17 +117,20 @@ void PrepareForUTF8Output(const CHAR* sr
   } else {
     // Assume that the entire input is non-ASCII and will have 3 bytes per char.
     output->reserve(src_len * 3);
   }
 }
 
 // Instantiate versions we know callers will need.
 template void PrepareForUTF8Output(const wchar_t*, size_t, std::string*);
+#ifndef __MINGW32__
+// On MinGW, these instantiations are the same, and MinGW complains if there are two
 template void PrepareForUTF8Output(const char16*, size_t, std::string*);
+#endif
 
 template<typename STRING>
 void PrepareForUTF16Or32Output(const char* src,
                                size_t src_len,
                                STRING* output) {
   output->clear();
   if (src_len == 0)
     return;
@@ -138,11 +141,14 @@ void PrepareForUTF16Or32Output(const cha
     // Otherwise assume that the UTF-8 sequences will have 2 bytes for each
     // character.
     output->reserve(src_len / 2);
   }
 }
 
 // Instantiate versions we know callers will need.
 template void PrepareForUTF16Or32Output(const char*, size_t, std::wstring*);
+#ifndef __MINGW32__
+// On MinGW, these instantiations are the same, and MinGW complains if there are two
 template void PrepareForUTF16Or32Output(const char*, size_t, string16*);
+#endif
 
 }  // namespace base
