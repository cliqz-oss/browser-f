# HG changeset patch
# User Daniel Holbert <dholbert@cs.stanford.edu>
# Date 1496432701 25200
#      Fri Jun 02 12:45:01 2017 -0700
# Node ID 9877f0ae77cd45046182caa62cbf9518a2b73451
# Parent  25facf3ac669983297260e34b010edb0c10c1ac3
Add a void cast to silence clang Wcomma build warning, in sandbox's snapshot of chromium header. r=bobowen

The build warning is for "possible misuse of comma operator".

The comma operator is a bit of a footgun becasue its first operand's result
just gets dropped on the floor (in this case, the result of the DCHECK
expression).  It appears that Chromium's use of the comma operator here is
intentional, though -- so we might as well accept clang's suggestion and "cast
expression to void to silence warning".

This is also filed upstream as:
 https://bugs.chromium.org/p/chromium/issues/detail?id=729123

diff --git a/security/sandbox/chromium/base/time/time.h b/security/sandbox/chromium/base/time/time.h
--- a/security/sandbox/chromium/base/time/time.h
+++ b/security/sandbox/chromium/base/time/time.h
@@ -724,17 +724,17 @@ constexpr TimeDelta TimeDelta::FromDoubl
 // static
 constexpr TimeDelta TimeDelta::FromProduct(int64_t value,
                                            int64_t positive_value) {
   return (
 #if !defined(_PREFAST_) || !defined(OS_WIN)
       // Avoid internal compiler errors in /analyze builds with VS 2015
       // update 3.
       // https://connect.microsoft.com/VisualStudio/feedback/details/2870865
-      DCHECK(positive_value > 0),
+      static_cast<void>(DCHECK(positive_value > 0)),
 #endif
       value > std::numeric_limits<int64_t>::max() / positive_value
           ? Max()
           : value < std::numeric_limits<int64_t>::min() / positive_value
                 ? Min()
                 : TimeDelta(value * positive_value));
 }
 
