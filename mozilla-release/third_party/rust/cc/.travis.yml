language: rust
sudo: false

matrix:
  include:
    - rust: 1.13.0
      install:
      script: cargo build
    - rust: stable
      env: TARGET=x86_64-unknown-linux-gnu NO_ADD=1
    - rust: stable
      env: TARGET=i686-unknown-linux-gnu
    - os: osx
      env: TARGET=x86_64-apple-darwin NO_ADD=1
    - os: osx
      env: TARGET=aarch64-apple-ios NO_RUN=--no-run TARGET_SYSROOT=$(xcrun -sdk iphoneos --show-sdk-path)
    - rust: beta
      env: TARGET=x86_64-unknown-linux-gnu NO_ADD=1
    - rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu NO_ADD=1
    - install: rustup component add rustfmt-preview
      script:
        - cargo fmt -- --write-mode diff
        - (cd cc-test && cargo fmt -- --write-mode diff)

    - rust: nightly
      before_script:
        - pip install 'travis-cargo<0.2' --user && export PATH=$HOME/.local/bin:$PATH
      install:
      script:
        - cargo doc --no-deps --all-features
      after_success:
        - travis-cargo --only nightly doc-upload

install:
  - if [ -z "$NO_ADD" ]; then rustup target add $TARGET; fi

script:
  - cargo build --verbose
  - cargo test --verbose $NO_RUN
  - cargo test --verbose --features parallel $NO_RUN
  - cargo test --manifest-path cc-test/Cargo.toml --target $TARGET $NO_RUN
  - cargo test --manifest-path cc-test/Cargo.toml --target $TARGET --features parallel $NO_RUN
  - cargo test --manifest-path cc-test/Cargo.toml --target $TARGET --release $NO_RUN
  - cargo doc
  - cargo clean && cargo build
  - rustdoc --test README.md -L target/debug -L target/debug/deps

env:
  global:
    secure: "CBtqrudgE0PS8x3kTr44jKbC2D4nfnmdYVecooNm0qnER4B4TSvZpZSQoCgKK6k4BYQuOSyFTOwYx6M79w39ZMOgyCP9ytB+tyMWL0/+ZuUQL04yVg4M5vd3oJMkOaXbvG56ncgPyFrseY+FPDg+mXAzvJk/nily37YXjkQj2D0="

notifications:
  email:
    on_success: never
addons:
  apt:
    packages:
      - g++-multilib
