(function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={exports:{},id:d,loaded:!1};return a[d].call(e.exports,e,e.exports,b),e.loaded=!0,e.exports}var c={};return b.m=a,b.c=c,b.p="",b(0)})([function(a,b,c){"use strict";async function e(i){const j=i.studies;if(void 0===j)return void i.log("Client does not support studies, aborting.","info");const k=(await j.getAll()).filter((l)=>l.active);for(const l of k)if(!g.includes(l.recipeId)){i.log("Stopping study for recipe ${study.recipeId}.","debug");try{await j.stop(l.recipeId)}catch(m){i.log(`Error while stopping study for recipe ${l.recipeId}: ${m}`,"error")}}}Object.defineProperty(b,"__esModule",{value:!0}),b.resetAction=function(){g=[]},b.postExecutionHook=e;var f=c(1);let g=[];class h extends f.Action{async execute(){const i=this.recipe.id;var j=this.recipe.arguments;const k=j.name,l=j.description,m=j.addonUrl,n=this.normandy.studies;if(void 0===n)return void this.normandy.log("Client does not support studies, aborting.","info");g.push(i);const o=await n.has(i);o?this.normandy.log(`Study for recipe ${i} already exists`,"debug"):(this.normandy.log(`Starting study for recipe ${i}`,"debug"),await n.start({recipeId:i,name:k,description:l,addonUrl:m}))}}b.default=h,(0,f.registerAction)("opt-out-study",h),(0,f.registerAsyncCallback)("postExecution",e)},function(a,b){(function(c){"use strict";Object.defineProperty(b,"__esModule",{value:!0});b.Action=class{constructor(g,h){this.normandy=g,this.recipe=h}};const e=b.registerAction=c&&c.registerAction||window&&window.registerAction||function(){},f=b.registerAsyncCallback=c&&c.registerAsyncCallback||window&&window.registerAsyncCallback||function(){}}).call(b,function(){return this}())}]);