/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/* ===== tree.css ===================================================
  == Styles used by the XUL outline element.
  ======================================================================= */

@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");

/* ::::: tree ::::: */

tree {
  margin: 0 4px;
  background-color: -moz-Field;
  color: -moz-FieldText;
  -moz-appearance: listbox;
}

/* ::::: tree focusring ::::: */

.focusring > .tree-stack > .tree-rows > .tree-bodybox {
  border: 1px solid transparent;  
}

.focusring:focus > .tree-stack > .tree-rows > .tree-bodybox {
  border: 1px solid #000000;
}


/* ::::: tree rows ::::: */

treechildren::-moz-tree-row {
  border: 1px solid transparent;
  min-height: 18px;
  height: 1.3em;
}

treechildren:not(.autocomplete-treebody)::-moz-tree-row(multicol, odd) {
  background-color: -moz-oddtreerow;
}

treechildren:not(.autocomplete-treebody)::-moz-tree-row(selected) {
  background-color: -moz-cellhighlight;
}

treechildren:not(.autocomplete-treebody)::-moz-tree-row(selected, focus) {
  background-color: Highlight;
}

treechildren::-moz-tree-row(current, focus) {
  border: 1px dotted Highlight;
}

treechildren::-moz-tree-row(selected, current, focus) {
  border: 1px dotted #F3D982;
}

tree[seltype="cell"] > treechildren::-moz-tree-row,
tree[seltype="text"] > treechildren::-moz-tree-row {
  border: none;
  background-color: transparent;
}

/* ::::: tree cells ::::: */

treechildren::-moz-tree-cell {
  padding: 0 2px;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell-text,
tree[seltype="text"] > treechildren::-moz-tree-cell-text,
treechildren::-moz-tree-cell-text {
  color: inherit;
}

treechildren::-moz-tree-cell-text(selected) {
  color: -moz-cellhighlighttext;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell {
  border: 1px solid transparent;
  padding: 0 1px;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text {
  border: 1px solid transparent;
  padding: 0 1px 1px;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell(active, selected) {
  background-color: -moz-cellhighlight;
}
tree[seltype="cell"] > treechildren::-moz-tree-cell-text(active, selected) {
  color: -moz-cellhighlighttext;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, selected) {
  background-color: -moz-cellhighlight;
  color: -moz-cellhighlighttext;
}

treechildren::-moz-tree-cell-text(selected, focus) {
  color: HighlightText;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell(active, selected, focus) {
  background-color: Highlight;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, selected, focus) {
  background-color: Highlight;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell-text(active, selected, focus) {
  color: HighlightText;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, selected, focus) {
  color: HighlightText;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell(active, current, focus) {
  border: 1px dotted #000000;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, current, focus) {
  border: 1px dotted #000000;
}

tree[seltype="cell"] > treechildren::-moz-tree-cell(active, selected, current, focus) {
  border: 1px dotted #C0C0C0;
}

tree[seltype="text"] > treechildren::-moz-tree-cell-text(active, selected, current, focus) {
  border: 1px dotted #C0C0C0;
}

/* ::::: lines connecting cells ::::: */

tree[seltype="cell"] > treechildren::-moz-tree-line,
tree[seltype="text"] > treechildren::-moz-tree-line,
treechildren::-moz-tree-line {
  border: 1px dotted ThreeDShadow;
}

tree[seltype="cell"] > treechildren::-moz-tree-line(active, selected, focus),
treechildren::-moz-tree-line(selected, focus) {
  border: 1px dotted HighlightText;
}


/* ::::: tree separator ::::: */

treechildren::-moz-tree-separator {
  border-top: 1px solid ThreeDShadow;
  border-bottom: 1px solid ThreeDHighlight;
}


/* ::::: drop feedback ::::: */

tree[seltype="cell"] > treechildren::-moz-tree-cell-text(primary, dropOn),
tree[seltype="text"] > treechildren::-moz-tree-cell-text(primary, dropOn),
treechildren::-moz-tree-cell-text(primary, dropOn) {
  background-color: Highlight;
  color: HighlightText;
}

treechildren::-moz-tree-drop-feedback {
  background-color: Highlight;
  width: 50px;
  height: 2px;
  margin-inline-start: 5px;
}

/* ::::: tree columns ::::: */

treecol,
treecolpicker {
  -moz-appearance: treeheadercell;
  -moz-box-align: center;
  -moz-box-pack: center;
  color: -moz-DialogText;
}

treecol:hover,
treecolpicker:hover {
  color: -moz-buttonhovertext;
}

.treecol-image {
  padding: 0 1px;
}

.treecol-text {
  margin: 0 !important;
}

treecol[hideheader="true"] {
  -moz-appearance: none;
}

/* ::::: column drag and drop styles ::::: */

treecol[dragging="true"] {
  color: Graytext;
}

treechildren::-moz-tree-column(insertbefore) {
  border-inline-start: 1px solid ThreeDShadow;
}

treechildren::-moz-tree-column(insertafter) {
  border-inline-end: 1px solid ThreeDShadow;
}

/* ::::: sort direction indicator :::::  */

.treecol-sortdirection {
  -moz-appearance: treeheadersortarrow;
}

/* ::::: column picker :::::  */

.tree-columnpicker-icon {
  list-style-image: url("chrome://global/skin/tree/columnpicker.gif");
}

/* ::::: twisty :::::  */

treechildren::-moz-tree-twisty {
  -moz-appearance: treetwisty;
  padding-inline-end: 4px;
  padding-top: 1px;
  width: 9px; /* The image's width is 9 pixels */
  list-style-image: url("chrome://global/skin/tree/twisty-clsd.png");
}

treechildren::-moz-tree-twisty(open) {
  -moz-appearance: treetwistyopen;
  width: 9px; /* The image's width is 9 pixels */
  list-style-image: url("chrome://global/skin/tree/twisty-open.png");
}

treechildren::-moz-tree-indentation {
  width: 18px;
}

/* ::::: editable tree ::::: */

treechildren::-moz-tree-row(selected, editing) {
  background-color: transparent;
  border: none;
}

treechildren::-moz-tree-cell-text(selected, editing) {
  color: inherit;
}

treechildren::-moz-tree-cell(active, selected, focus, editing),
tree[seltype="cell"] > treechildren::-moz-tree-cell(active, selected, focus, editing),
tree[seltype="text"] > treechildren::-moz-tree-cell(active, selected, focus, editing) {
  background-color: transparent;
  border: none;
}

treechildren::-moz-tree-cell-text(active, selected, editing) {
  opacity: 0;
}

.tree-input {
  -moz-appearance: none;
  border: 1px solid Highlight;
  margin: 0;
  margin-inline-start: -4px;
  padding: 1px;
}
