/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

html {
  font-size: 10px;
  font-family: menu;
}

/* Shared conversation window styles */
.conversation {
  position: relative;
}

button::-moz-focus-inner {
  border: 0;
}

.conversation-toolbar {
  z-index: 1020; /* required to have it superimposed to the video element */
  border: 0;
  left: 1.2rem;
  right: .7rem;
  height: 2.6rem;
  position: absolute;
  bottom: 1.5rem;
}

html[dir="rtl"] .conversation-toolbar {
  left: .7rem;
  right: 1.2rem;
}

.idle {
  transition: opacity 1.5s;
  opacity: .75;
}

/* standalone version */

.conversation-toolbar > li {
  float: left;
  margin-right: .7rem;
  font-size: 0; /* prevents vertical bottom padding added to buttons in google
                   chrome */
}

html[dir="rtl"] .conversation-toolbar > li {
  float: right;
  margin-left: .7rem;
  margin-right: auto;
}

.conversation-toolbar .btn {
  background-position: center;
  background-size: 28px;
  background-repeat: no-repeat;
  background-color: transparent;
  height: 28px;
  width: 33px;
}

.conversation-toolbar-media-btn-group-box {
  background-position: center;
  background-repeat: no-repeat;
  background-color: transparent;
  background-image: url("../img/svg/media-group.svg");
  background-size: cover;
  height: 28px;
  width: 67px;
}

.conversation-toolbar-media-btn-group-box > button:last-child:active,
.conversation-toolbar-media-btn-group-box > button:last-child:hover {
  background-image: url("../img/svg/media-group-right-hover.svg");
  background-size: cover;
}

html[dir="rtl"] .conversation-toolbar-media-btn-group-box > button:last-child:active,
html[dir="rtl"] .conversation-toolbar-media-btn-group-box > button:last-child:hover {
  background-image: url("../img/svg/media-group-left-hover.svg");
  background-size: cover;
}

.conversation-toolbar-media-btn-group-box > button:first-child:active,
.conversation-toolbar-media-btn-group-box > button:first-child:hover {
  background-image: url("../img/svg/media-group-left-hover.svg");
  background-size: cover;
}

html[dir="rtl"] .conversation-toolbar-media-btn-group-box > button:first-child:active,
html[dir="rtl"] .conversation-toolbar-media-btn-group-box > button:first-child:hover {
  background-image: url("../img/svg/media-group-right-hover.svg");
  background-size: cover;
}

.conversation-toolbar-media-btn-group-box > li {
  float: left;
}

html[dir="rtl"] .conversation-toolbar-media-btn-group-box > li {
  float: right;
}

.conversation-toolbar-btn-box.btn-edit-entry {
  float: right;
}

html[dir="rtl"] .conversation-toolbar-btn-box.btn-edit-entry {
  float: left;
}

.fx-embedded-answer-btn-text {
  /* always leave space for the icon (width and margin) */
  max-width: calc(100% - 24px - .2rem);
  height: 22px;
  line-height: 22px;
}

.fx-embedded-btn-icon-video,
.fx-embedded-btn-icon-audio {
  width: 24px;
  height: 24px;
  display: inline-block;
  background-repeat: no-repeat;
  background-position: center;
  background-size: 14px 14px;
  border-radius: 50%;
  -moz-margin-start: .2rem;
}

/* conversationViews.jsx */

.fx-embedded-btn-icon-video,
.fx-embedded-btn-video-small,
.fx-embedded-tiny-video-icon {
  background-image: url("../img/video-inverse-14x14.png");
}

.fx-embedded-btn-icon-audio,
.fx-embedded-btn-audio-small,
.fx-embedded-tiny-audio-icon {
  background-image: url("../img/audio-inverse-14x14.png");
}

.fx-embedded-btn-audio-small,
.fx-embedded-btn-video-small {
  width: 26px;
  height: 26px;
  border-left: 1px solid rgba(255,255,255,.4);
  background-color: #56b397;
  border-top-right-radius: 2px;
  border-bottom-right-radius: 2px;
  background-position: center;
  background-repeat: no-repeat;
  cursor: pointer;
}

  .fx-embedded-btn-video-small:hover,
  .fx-embedded-btn-audio-small:hover {
    background-color: #50e3c2;
  }

.conversation-toolbar .btn-hangup {
  background-image: url("../img/svg/exit.svg");
  border: 0;
}

/* Audio mute button */
.btn-mute-audio:after {
  content: url("../img/svg/audio.svg");
}

.btn-mute-audio.muted:after {
  content: url("../img/svg/audio-mute.svg");
}
.btn-mute-audio:hover:after,
.btn-mute-audio:active:after {
  content: url("../img/svg/audio-hover.svg");
}

.btn-mute-audio.muted:hover:after,
.btn-mute-audio.muted:active:after {
  content: url("../img/svg/audio-mute-hover.svg");
}

/* Video mute button */
.btn-mute-video:after {
  content: url("../img/svg/video.svg");
}

.btn-mute-video:active:after,
.btn-mute-video:hover:after {
  content: url("../img/svg/video-hover.svg");
}

.btn-mute-video.muted:after {
  content: url("../img/svg/video-mute.svg");
}

.btn-mute-video.muted:hover:after,
.btn-mute-video.muted:active:after {
  content: url("../img/svg/video-mute-hover.svg");
}

.btn-settings {
  width: 28px;
  height: 28px;
  background-size: 28px;
  background-image: url("../img/svg/settings.svg");
  background-color: transparent;
}

.btn-settings:hover,
.btn-settings:active {
  background-image: url("../img/svg/settings-hover.svg");
}

.btn-screen-share {
  background-image: url("../img/svg/sharing.svg");
}

.btn-screen-share:hover,
.btn-screen-share:active {
  background-image: url("../img/svg/sharing-hover.svg");
}

.btn-screen-share.active {
  background-image: url("../img/svg/sharing-active.svg");
}

.btn-screen-share.disabled {
  /* The screen share button is in its pending state when its disabled. */
  background-image: url("../img/svg/sharing-pending.svg");
}

.fx-embedded .remote_wrapper {
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.fx-embedded .no-video {
  background: black none repeat scroll 0% 0%;
  height: 100%;
  width: 100%;
}

.standalone .local-stream {
  /* required to have it superimposed to the control toolbar */
  z-index: 1001;
}

/* Side by side video elements */

.conversation .media.side-by-side .focus-stream {
  width: 50%;
  float: left;
}

.conversation .media.side-by-side .local-stream,
.conversation .media.side-by-side .remote-inset-stream {
  width: 50%;
}

/* Call ended view */
.call-ended p {
  text-align: center;
}

/* General Call (incoming or outgoing). */

/* XXX call-window currently relates to multiple things like the AcceptCallView,
   DirectCallFailureView, PendingConversationView. It doesn't relate to the direct
   call media views. We should probably make this more explicit at some stage. */

/*
 * Height matches the height of the docked window
 * but the UI breaks when you pop out
 * Bug 1040985
 */
.call-window {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  min-height: 230px;
}

.call-action-group {
  display: flex;
  padding: 0 4px;
  width: 100%;
}

.call-action-group > .btn,
.room-context > .btn {
  min-height: 30px;
  border-radius: 4px;
  margin: 0 4px;
  min-width: 64px;
}

.call-action-group > .btn {
  max-width: 48%;
  flex-grow: 1;
}

.call-action-group > .btn-rejoin {
  max-width: 100%;
}

.call-action-group .btn-group-chevron,
.call-action-group .btn-group {
  width: 100%;
}

.call-action-group > .invite-button {
  cursor: pointer;
  margin: 0 4px;
  position: relative;
}

.call-action-group > .invite-button > img {
  background-color: #00a9dc;
  border-radius: 100%;
  height: 28px;
  width: 28px;
}

.call-action-group > .invite-button:hover > img {
  background-color: #5cccee;
}

.call-action-group > .invite-button.triggered > img {
  background-color: #56b397;
}

.call-action-group > .invite-button > p {
  display: none;
  /* Position the text under the button while centering it without impacting the
   * rest of the layout */
  left: -10rem;
  margin: .5rem 0 0;
  position: absolute;
  right: -10rem;
}

.call-action-group > .invite-button.triggered > p,
.call-action-group > .invite-button:hover > p {
  display: block;
}

.direct-call-failure,
.room-failure {
  /* This flex allows us to not calculate the height of the logo area
     versus the buttons */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  min-height: 230px;
  height: 100%;
}

.direct-call-failure > .call-action-group,
.room-failure > .call-action-group {
  flex: none;
  margin: 1rem 0 2rem;
}

.direct-call-failure > .failure-info,
.room-failure > .failure-info {
  flex: auto;
}

.direct-call-failure > .settings-control,
.room-failure > .settings-control {
  position: absolute;
  top: 1rem;
  right: .5rem;
}

html[dir="rtl"] .direct-call-failure > .settings-control,
html[dir="rtl"] .room-failure > .settings-control {
  left: .5rem;
  right: auto;
}

.failure-info {
  text-align: center;
  /* This flex is designed to set the logo in a standard place, but if the
     text below needs more space (due to multi-line), then the logo will move
     higher out the way */
  display: flex;
  flex-direction: column;
  /* Matches 4px padding of .btn-group plus 4px of margin for .btn */
  padding: 0 0.8rem;
}

.failure-info-logo {
  height: 90px;
  background-image: url("../img/sad_hello_icon_64x64.svg");
  background-position: center center;
  background-size: contain;
  background-repeat: no-repeat;
  flex: 1;
  background-size: 90px 90px;
  /* Don't let the logo take up too much space, e.g. if there's only one line of
     text. */
  max-height: calc(90px + 4rem);
  margin-top: 1rem;
}

.failure-info-message {
  margin: 0.25rem 0px;
  text-align: center;
  font-weight: bold;
  font-size: 1.2rem;
  color: #333;
  flex: none;
}

.failure-info-extra,
.failure-info-extra-failure {
  margin: 0.25rem 0;
  flex: none;
}

.failure-info-extra-failure {
  color: #f00;
}

.fx-embedded-call-button-spacer {
  display: flex;
  flex: 1;
}

/*
 * Dropdown menu hidden behind a chevron
 *
 * .native-dropdown-menu[-large-parent] Generic class, contains common styles
 * .standalone-dropdown-menu Initiate call dropdown menu
 * .conversation-window-dropdown Dropdown menu for answer/decline/block options
 */

.native-dropdown-menu,
.native-dropdown-large-parent {
  /* Should match a native select menu */
  padding: 0;
  position: absolute; /* element can be wider than the parent */
  background: #fff;
  margin: 0;
  box-shadow: 0 4px 5px rgba(30,30,30,.3);
  border-style: solid;
  border-width: 1px 1px 1px 2px;
  border-color: #aaa #111 #111 #aaa;
}

  /*
   * If the component is smaller than the parent
   * we need it to display block to occupy full width
   * Same as above but overrides apropriate styles
   */
  .native-dropdown-large-parent {
    position: relative;
    display: block;
  }

  .native-dropdown-menu li,
  .native-dropdown-large-parent li {
    list-style: none;
    cursor: pointer;
    color: #000;
  }

  .native-dropdown-menu li:hover,
  .native-dropdown-large-parent li:hover,
  .native-dropdown-large-parent li:hover button {
    color: #fff;
    background-color: #111;
  }

.conversation-window-dropdown {
  bottom: 4rem;
}

.conversation-window-dropdown > li {
  padding: .2rem;
  font-size: 1rem;
  white-space: nowrap;
}

.screen-share-menu.dropdown-menu,
.settings-menu.dropdown-menu {
  bottom: 3.1rem;
}

.settings-menu.dropdown-menu {
  left: auto;
  /*offset dropdown menu to be above menu button*/
  right: 14px;
}

html[dir="rtl"] .screen-share-menu.dropdown-menu,
html[dir="rtl"] .settings-menu.dropdown-menu {
  right: auto;
}

html[dir="rtl"] .screen-share-menu.dropdown-menu {
  /*offset dropdown menu to be above menu button*/
  left: 40px;
}

html[dir="rtl"] .settings-menu.dropdown-menu {
  /*offset dropdown menu to be above menu button*/
  left: 14px;
}

.settings-menu.dropdown-menu.menu-below {
  top: 11.5rem;
  bottom: auto;
}

/* Expired call url page */

.expired-url-info {
  width: 400px;
  margin: 0 auto;
}

.promote-firefox {
  text-align: center;
  font-size: 18px;
  line-height: 24px;
  margin: 2em 0;
}

.promote-firefox h3 {
  font-weight: 300;
}

/* Feedback form */
.feedback-view-container {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  align-content: center;
  align-items: flex-start;
  height: 100%;
}

.feedback-heading {
  margin: 1em 0;
  width: 100%;
  text-align: center;
  font-weight: bold;
  font-size: 1.2em;
}

.feedback-hello-logo {
  background-image: url("../img/helloicon.svg");
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
  flex: 2 1 auto;
  width: 100%;
  margin: 30px 0;
}

.feedback-button-container {
  flex: 0 1 auto;
  margin: 30px;
  align-self: center;
}

.feedback-button-container > button {
  margin: 0 30px;
  padding: .5em 2em;
  border: none;
  background: #00A9DC;
  color: #fff;
  cursor: pointer;
}

.fx-embedded-btn-back {
  margin-bottom: 1rem;
  padding: .2rem .8rem;
  border: 1px solid #aaa;
  border-radius: 2px;
  background: transparent;
  color: #777;
  cursor: pointer;
}

.feedback-category-label {
  display: block;
  line-height: 1.5em;
}

.feedback-category-radio {
  margin-right: .5em;
}

.feedback > form > .btn-success,
.feedback-description {
  width: 100%;
  margin-top: 14px;
}

.feedback > form > .btn-success {
  padding-top: .5em;
  padding-bottom: .5em;
  border-radius: 2px;
}

.feedback .info {
  display: block;
  font-size: 10px;
  color: #CCC;
  text-align: center;
}

.conversation .media.nested .focus-stream {
  display: inline-block;
  position: absolute; /* workaround for lack of object-fit; see bug 1020445 */
  width: 100%;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

/*
 * For any audio-only streams, we want to display our own background
 */
.avatar {
  background-image: url("../img/audio-call-avatar.svg");
  background-repeat: no-repeat;
  background-color: #4BA6E7;
  background-size: contain;
  background-position: center;

  /*
   * Expand to fill the available space, since there is no video any
   * intrinsic width. XXX should really change to an <img> for clarity
   */
  height: 100%;
  width: 100%;
}

/*
 * Used to center the loading spinner
 */
.focus-stream,
.media-wrapper:not(.receiving-screen-share) > .remote {
  position: relative;
}

.loading-stream {
  /* vertical and horizontal center */
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -50px;
  margin-top: -50px;
  width: 100px;
  height: 100px;

  /* place the animation */
  background-image: url("../img/spinner.svg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 40%;

  /* 12 is the number of lines in the spinner image */
  animation: rotate-spinner 1s steps(12, end) infinite;
}

@keyframes rotate-spinner {
  to {
    transform: rotate(360deg);
  }
}

.conversation .local .avatar {
  position: absolute;
  z-index: 1;
}

.remote > .avatar {
  /* make visually distinct from local avatar */
  opacity: 0.25;
}

.fx-embedded-call-identifier {
  display: inline;
  width: 100%;
  padding: 1.2em;
}

.fx-embedded-call-identifier-item {
  height: 50px;
}

.fx-embedded-call-identifier-avatar {
  max-width: 50px;
  min-width: 50px;
  background: #ccc;
  border-radius: 50%;
  background-image: url("../img/audio-call-avatar.svg");
  background-repeat: no-repeat;
  background-color: #4ba6e7;
  background-size: contain;
  overflow: hidden;
  box-shadow: inset 0 0 0 1px rgba(255,255,255,.3);
  float: left;
  -moz-margin-end: 1em;
}

.fx-embedded-call-identifier-text {
  font-weight: bold;
}

.fx-embedded-call-identifier-info {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  -moz-margin-start: 1em;
}

.fx-embedded-conversation-timestamp {
  font-size: .6rem;
  line-height: 17px;
  display: inline-block;
  vertical-align: top;
}

.fx-embedded-call-detail {
  padding-top: 0.6em;
}

.fx-embedded-tiny-video-icon {
  margin: 0 .8em;
}

.fx-embedded-tiny-audio-icon,
.fx-embedded-tiny-video-icon {
  width: 24px;
  height: 24px;
  background-color: #00a9dc;
  display: inline-block;
  background-repeat: no-repeat;
  background-position: center;
  border-radius: 50%;
}

  .fx-embedded-tiny-video-icon.muted {
    background-color: rgba(0,0,0,.2)
  }

/* Force full height on all parents up to the video elements
 * this way we can ensure the aspect ratio and use height 100%
 * on the video element
 * */
html, .fx-embedded, #main,
.video-layout-wrapper,
.conversation,
.desktop-call-wrapper,
.desktop-room-wrapper {
  height: 100%;
}

/* We use 641px rather than 640, as min-width and max-width are inclusive */
@media screen and (min-width: 641px) {
  .standalone .conversation .conversation-toolbar {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
  }

  .standalone .conversation .local-stream {
    position: absolute;
    right: 15px;
    bottom: 15px;
    width: 20%;
    height: 20%;
    max-width: 400px;
    max-height: 300px;
  }

  /* Nested video elements */
  .standalone .conversation .media.nested {
    position: relative;
    height: 100%;
  }

  .standalone .media.nested {
    margin-left: 10px;
  }

  .standalone .remote_wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .standalone {
    margin: 0 auto;
  }
}

@media screen and (max-width:640px) {
  .standalone .video-layout-wrapper,
  .standalone .conversation {
    height: 100%;
  }

  .standalone .media {
    height: 90%;
  }

  .standalone .media.nested {
    min-height: 500px;
  }

  .standalone .conversation .local-stream {
    flex: 1;
    min-width: 120px;
    min-height: 150px;
    width: 100%;
  }

  /* Nested video elements */
  .standalone .conversation .media.nested {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    flex: 1 1 0%;
  }

  .standalone .video_wrapper.remote_wrapper {
    /* Because of OT markup we need to set a high flex value
     * Flex rule assures remote and local streams stack on top of each other
     * Computed width is not 100% unless the `width` rule */
    flex: 2;
    width: 100%;
    position: relative;
  }
}

@media screen and (max-width:420px) {
  /* Restore video height so that we get
   * vertical centering for free on a small screen
   **/
  .standalone .conversation .media video {
    height: 100%;
  }
}

/**
 * Rooms
 */

.room-conversation-wrapper {
  position: relative;
  height: 100%;
}

.room-conversation-wrapper header {
  background: #000;
  height: 50px;
  text-align: left;
  margin: 0 10px;
}

html[dir="rtl"] .room-conversation-wrapper header {
  text-align: right;
}

.room-conversation-wrapper header h1 {
  font-size: 1.5em;
  color: #fff;
  line-height: 50px;
  text-indent: 40px;
  background-image: url("../img/firefox-logo.png");
  background-size: 30px;
  background-position: 0 center;
  background-repeat: no-repeat;
  display: inline-block;
  margin: 0 10px;
}

html[dir="rtl"] .room-conversation-wrapper header h1 {
  background-position: 100% center;
}

.room-conversation-wrapper header a {
  float: right;
}

html[dir="rtl"] .room-conversation-wrapper header a {
  float: left;
}

.room-conversation-wrapper header .icon-help {
  display: inline-block;
  background-size: contain;
  margin-top: 15px;
  width: 20px;
  height: 20px;
  background: transparent url("../img/svg/glyph-help-16x16.svg") no-repeat;
}

.fx-embedded .room-conversation .conversation-toolbar .btn-hangup {
  background-image: url("../img/icons-14x14.svg#exit-white");
}

.room-invitation-overlay {
  position: absolute;
  background: rgba(255, 255, 255, 0.85);
  top: 0;
  height: 100%;
  right: 0;
  left: 0;
  text-align: center;
  color: #000;
  z-index: 1010;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: stretch;
}

.room-invitation-content {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
}

.share-service-dropdown {
  color: #000;
  text-align: start;
  bottom: auto;
  top: 0;
  overflow: hidden;
  overflow-y: auto;
}

/* When the dropdown is showing a vertical scrollbar, compensate for its width. */
body[platform="other"] .share-service-dropdown.overflow > .dropdown-menu-item,
body[platform="win"] .share-service-dropdown.overflow > .dropdown-menu-item {
  -moz-padding-end: 20px;
}

.share-service-dropdown > .dropdown-menu-item > .icon {
  width: 14px;
  height: 14px;
  margin-right: 4px;
}

.dropdown-menu-item > .icon-add-share-service {
  background-image: url("../img/icons-16x16.svg#add");
  background-repeat: no-repeat;
  background-size: 12px 12px;
  width: 12px;
  height: 12px;
}

.dropdown-menu-item:hover > .icon-add-share-service {
  background-image: url("../img/icons-16x16.svg#add-hover");
}

.dropdown-menu-item:hover:active > .icon-add-share-service {
  background-image: url("../img/icons-16x16.svg#add-active");
}

.context-url-view-wrapper {
  padding: 12px;
  margin-bottom: 0.5em;
  background-color: #dbf7ff;
}

.showing-room-name > .text-chat-entries > .text-chat-scroller > .context-url-view-wrapper {
  padding-top: 0;
}

.room-context {
  background: #fff;
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  font-size: .9em;
  display: flex;
  flex-flow: column nowrap;
  align-content: flex-start;
  align-items: flex-start;
  overflow-x: hidden;
  overflow-y: auto;
  /* Make the context view float atop the video elements. */
  z-index: 3;
}

.room-invitation-overlay .room-context {
  position: relative;
  left: auto;
  bottom: auto;
  flex: 0 1 auto;
  height: 100%;
}

.room-context > .error-display-area.error {
  display: block;
  background-color: rgba(215,67,69,.8);
  border-radius: 3px;
  padding: .5em;
}

.room-context > .error-display-area {
  display: none;
}

.room-context > .error-display-area.error {
  margin: 1em 0 .5em 0;
  text-align: center;
  text-shadow: 1px 1px 0 rgba(0,0,0,.3);
}

.room-invitation-content,
.room-context-header {
  color: #333;
  font-size: 1.2rem;
  font-weight: bold;
  margin: 1rem auto;
}

.room-context > form {
  margin-bottom: 1rem;
  padding: .5rem;
  width: 100%;
}

.room-context > form > textarea,
.room-context > form > input[type="text"] {
  border: 1px solid #c3c3c3;
  border-radius: 4px;
  box-shadow: none;
  color: #4a4a4a;
  display: block;
  font-size: 1.1rem;
  height: 2.6rem;
  margin: 10px 0;
  outline: none;
  padding: 6px;
  width: 100%;
}

.room-context > form > textarea {
  font-family: inherit;
  height: 5.2rem;
  resize: none;
}

.room-context > form > textarea::-moz-placeholder,
.room-context > form > input::-moz-placeholder {
  color: #999;
}

.room-context > form > textarea:focus,
.room-context > form > input:focus {
  border: 0.1rem solid #5cccee;
}

.media-layout {
  height: 100%;
}

.standalone-room-wrapper > .media-layout {
  /* 50px is the header, 3em is the footer. */
  height: calc(100% - 50px - 3em);
  margin: 0 10px;
}

.media-layout > .media-wrapper {
  display: flex;
  flex-flow: column wrap;
  height: 100%;
}

.media-wrapper > .focus-stream {
  display: flex;
  /* We want this to be the width, minus 200px which is for the right-side text
     chat and video displays. */
  width: calc(100% - 200px);
  /* 100% height to fill up media-layout, thus forcing other elements into the
     second column that's 200px wide */
  height: 100%;
  background-color: #4E4E4E;
}

.media-wrapper > .remote {
  /* Works around an issue with object-fit: cover in Google Chrome - it doesn't
     currently crop but overlaps the surrounding elements.
     https://code.google.com/p/chromium/issues/detail?id=400829 */
  overflow: hidden;
}

.media-wrapper > .remote > .remote-video {
  object-fit: cover;
}

/* Note: we can't use "display: flex;" for the text-chat-view itself,
   as this lets it overflow the expected column heights, and we can't
   fix its height. */
.media-wrapper > .text-chat-view {
  flex: 0 0 auto;
  /* Text chat is a fixed 200px width for normal displays. */
  width: 200px;
  height: 100%;
}

.media-wrapper.showing-local-streams > .text-chat-view {
  /* When we're displaying the local streams, then we need to make the text
     chat view a bit shorter to give room. */
  height: calc(100% - 150px);
}

.media-wrapper.showing-local-streams.receiving-screen-share {
  position: relative;
}

.media-wrapper.showing-local-streams.receiving-screen-share > .text-chat-view {
  /* When we're displaying the local streams, then we need to make the text
     chat view a bit shorter to give room. */
  height: calc(100% - 300px);
}

.desktop-call-wrapper > .media-layout > .media-wrapper > .text-chat-view,
.desktop-room-wrapper > .media-layout > .media-wrapper > .text-chat-view {
  height: calc(100% - 150px);
}

/* Temporarily slaved from .media-wrapper until we use it in more places
   to avoid affecting the conversation window on desktop. */
.media-wrapper > .text-chat-view > .text-chat-entries {
  /* 40px is the height of .text-chat-box. */
  height: calc(100% - 40px);
}

.media-wrapper > .text-chat-disabled > .text-chat-entries {
  /* When text chat is disabled, the entries box should be 100% height. */
  height: 100%;
}

.media-wrapper > .local {
  flex: 0 1 auto;
  width: 200px;
  height: 150px;
}

.media-wrapper.receiving-screen-share > .screen {
  order: 1;
}

.media-wrapper.receiving-screen-share > .text-chat-view {
  order: 2;
}

.media-wrapper.receiving-screen-share > .remote {
  order: 3;
  flex: 0 1 auto;
  width: 200px;
  height: 150px;
}

.media-wrapper.receiving-screen-share > .local {
  order: 4;
}

@media screen and (max-width:640px) {
  .media-layout-wrapper {
    height: 100%;
  }

  .standalone-room-wrapper > .media-layout {
    /* 50px is height of header, 38px is height of toolbar, 25px is height of footer. */
    height: calc(100% - 50px - 38px - 25px);
  }

  .media-layout > .media-wrapper {
    flex-direction: row;
    margin: 0;
    width: 100%;
  }

  .media-wrapper > .focus-stream {
    width: 100%;
    /* A reasonable height */
    height: 70%;
  }

  .media-wrapper.receiving-screen-share > .focus-stream {
    height: 50%;
  }

  /* Temporarily slaved from .media-wrapper until we use it in more places
     to avoid affecting the conversation window on desktop. */
  .text-chat-view > .text-chat-entries {
    /* 40px is the height of .text-chat-box. */
    height: calc(100% - 40px);
    width: 100%;
  }

  .media-wrapper > .text-chat-disabled > .text-chat-entries {
    /* When text chat is disabled, the entries box should be 100% height. */
    height: 100%;
  }

  .media-wrapper > .focus-stream > .local ~ .conversation-toolbar {
    /* 22px are the margins, 120px is for the local video area. */
    max-width: calc(100% - 22px - 120px);
  }

  .media-wrapper > .focus-stream > .local {
    /* Position over the remote video */
    position: absolute;
    /* Make sure its on top */
    z-index: 2;
    margin: 3px;
    right: 0;
    left:auto;
    /* 29px is (30% of 50px high header) + (height toolbar (38px) +
       height footer (25px) - height header (50px)) */
    bottom: 0;
    width: 120px;
    height: 120px;
  }

  html[dir="rtl"] .media-wrapper > .focus-stream > .local {
    right: auto;
    left: 0;
  }


  .standalone-room-wrapper > .media-layout > .media-wrapper > .local {
    /* Add 10px for the margin on standalone */
    right: 10px;
  }


  html[dir="rtl"] .media-wrapper > .local {
    right: auto;
    left: 0;
  }

  .media-wrapper > .text-chat-view {
    order: 3;
    flex: 1 1 auto;
    width: 100%;
  }

  .media-wrapper > .text-chat-view,
  .media-wrapper.showing-local-streams > .text-chat-view,
  .media-wrapper.showing-local-streams.receiving-screen-share > .text-chat-view {
    /* The remaining 30% that the .focus-stream doesn't use. */
    height: 30%;
  }

  .media-wrapper.receiving-screen-share > .remote > .conversation-toolbar,
  .media-wrapper.showing-local-streams.receiving-screen-share  > .remote > .conversation-toolbar {
    bottom: calc(30% + 1.5rem);
  }


  .desktop-call-wrapper > .media-layout > .media-wrapper > .text-chat-view,
  .desktop-room-wrapper > .media-layout > .media-wrapper > .text-chat-view {
    /* This is temp, to echo the .media-wrapper > .text-chat-view above */
    height: 30%;
  }

  .media-wrapper.receiving-screen-share > .screen {
    order: 1;
  }

  .media-wrapper.receiving-screen-share > .remote {
    /* Screen shares have remote & local video side-by-side on narrow screens */
    order: 2;
    flex: 1 1 auto;
    height: 20%;
    /* Ensure no previously specified widths take effect, and we take up no more
       than half the width. */
    width: auto;
    max-width: 50%;
  }

  .media-wrapper.receiving-screen-share > .remote > .remote-video {
      /* Reset the object-fit for this. */
    object-fit: contain;
  }

  .media-wrapper.receiving-screen-share > .local {
    /* Screen shares have remote & local video side-by-side on narrow screens */
    order: 3;
    flex: 1 1 auto;
    height: 20%;
    /* Ensure no previously specified widths take effect, and we take up no more
       than half the width. */
    width: auto;
    max-width: 50%;
    /* This cancels out the absolute positioning when it's just remote video. */
    position: relative;
    bottom: auto;
    right: auto;
    margin: 0;
  }

  .media-wrapper.receiving-screen-share > .text-chat-view {
    order: 4;
  }
}

/* e.g. very narrow widths similar to conversation window */
@media screen and (max-width:300px) {
  .media-layout > .media-wrapper {
    flex-flow: column nowrap;
  }

  .media-wrapper > .focus-stream > .local ~ .conversation-toolbar {
    max-width: calc(75% - 22px);
  }

  .media-wrapper > .focus-stream > .local {
    position: absolute;
    right: 0;
    left: auto;
    /* 30% is the height of the text chat. As we have a margin,
       we don't need to worry about any offset for a border */
    bottom: 0;
    margin: 3px;
    object-fit: contain;
    /* These make the avatar look reasonable and the local
       video not too big */
    width: 25%;
    height: 25%;
  }

  html[dir="rtl"] .media-wrapper > .focus-stream > .local {
    left: 0;
    right: auto;
  }

  .media-wrapper:not(.showing-remote-streams) > .focus-stream > .no-video {
    display: none;
  }

  .media-wrapper:not(.showing-remote-streams) > .focus-stream > .local {
    position: relative;
    margin: 0;
    right: auto;
    left: auto;
    bottom: auto;
    width: 100%;
    height: 100%;
    background-color: black;
  }

  .media-wrapper:not(.showing-remote-streams) > .focus-stream > .local ~ .conversation-toolbar {
    max-width: calc(100% - 22px);
  }

  .media-wrapper > .focus-stream {
    flex: 1 1 auto;
    height: auto;
  }
}

.standalone > #main > .room-conversation-wrapper > .media-layout > .conversation-toolbar {
  border: none;
}

/* Standalone rooms */

.standalone .room-conversation-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}
.standalone .room-conversation-wrapper .video-layout-wrapper {
  /* 50px = height of header, 3em = height of footer */
  /* XXX This is currently wrong for narrow/mobile display,
     bug 1168829  will hopefully address it. */
  height: calc(100% - 50px - 3em);
}

.standalone .room-conversation-wrapper .room-inner-info-area {
  color: #fff;
  margin: auto;
  /* 290px is the width of the widest info child, i.e., a tile */
  width: 290px;
}

.standalone .prompt-media-message {
  padding-top: 136px; /* Fallback for browsers that don't support calc() */
  /* 122px is 2x the intrinsic height of the background-image, and
     1rem puts one line of margin between the background-image and
     supporting text. */
  padding-top: calc(122px + 1rem);
  color: #000;
  background-color: #fff;
  background-image: url("../../img/gum-others.svg");
  background-position: top center;
  /* The background-image is scaled up at 2x the instrinsic size
     (witdh & height) to make it easier to see. */
  background-size: 202px 122px;
  background-repeat: no-repeat;
  border: 1rem #fff solid;
  box-shadow: 0 0 5px #000;
  margin: auto;
  /* `width` here is specified by the design spec. */
  width: 250px;
}

.standalone .prompt-media-message.chrome {
  background-image: url("../../img/gum-chrome.svg");
}

.standalone .prompt-media-message.firefox {
  background-image: url("../../img/gum-firefox.svg");
}

.standalone .prompt-media-message.opera {
  background-image: url("../../img/gum-opera.svg");
}

.standalone .room-conversation-wrapper .room-inner-info-area button {
  border-radius: 3px;
  font-size: 1.2em;
  padding: .2em 1.2em;
  cursor: pointer;
}

.standalone .room-conversation-wrapper .room-inner-info-area a.btn {
  padding: .5em 3em .3em 3em;
  border-radius: 3px;
  font-weight: normal;
  max-width: 400px;
}

.standalone .room-conversation-wrapper .ended-conversation {
  position: relative;
  height: auto;
}

/* Text chat in styles */

.text-chat-view {
  background: white;
}

.text-chat-entries {
  overflow: auto;
}

.text-chat-entry,
.text-chat-header {
  display: flex;
  margin-bottom: .5em;
  align-items: flex-start;
}

.text-chat-entry {
  /* aligns paragraph to side where reading starts from */
  text-align: start;
}

/* Sent text chat entries should be on the right */
.text-chat-entry.sent {
  /* aligns paragraph to right side */
  justify-content: flex-end;
  margin-left: 0;
  margin-right: 5px;
}

.text-chat-entry.received {
  margin-left: 4px;
  margin-right: 0;
}

html[dir="rtl"] .text-chat-entry.sent {
  margin-left: 5px;
  margin-right: 0;
}


html[dir="rtl"] .text-chat-entry.received {
  margin-left: 0;
  margin-right: 5px;
}

/* If you change this entry, check it doesn't affect the "special" text
   chat entries as well (.speical, .room-name, .context-url-view-wrapper */
.text-chat-entry > p {
  position: relative;
  z-index: 10;
  /* Drop the default margins from the 'p' element. */
  margin: 0;
  padding: .8rem;
  /* leave some room for the chat bubble arrow */
  max-width: 70%;
  border-radius: 15px;
  border: 1px solid #5cccee;
  background: #fff;
  word-wrap: break-word;
  flex: 0 1 auto;
  order: 1;
}

.text-chat-entry.sent > p {
  border-bottom-right-radius: 0;
}

.text-chat-entry.received > p {
  border-top-left-radius: 0;
  border-color: #d8d8d8;
}

html[dir="rtl"] .text-chat-entry.sent > p {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 15px;
}

html[dir="rtl"] .text-chat-entry.received > p {
  border-top-right-radius: 0;
  border-top-left-radius: 15px;
}

/* Text chat entry timestamp */
.text-chat-entry-timestamp {
  margin: 0 .5em;
  color: #aaa;
  font-style: italic;
  font-size: .8em;
  flex: 0 1 auto;
  align-self: center;
}

.received > .text-chat-entry-timestamp {
  order: 2;
}

/* Pseudo element used to cover part between chat bubble and chat arrow.
   dimensions may change for each position */
.text-chat-entry > p:after {
  position: absolute;
  background: #fff;
  content: "";
  /* default dimensions */
  width: 6px;
  height: 7px;
}

.text-chat-entry.sent > p:after {
  right: -1px;
  bottom: 0;
  width: 7px;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}

.text-chat-entry.received > p:after {
  top: 0;
  left: -1px;
  border-bottom-left-radius: 4px;
  border-bottom-right-radius: 4px;
}

html[dir="rtl"] .text-chat-entry.sent > p:after {
  /* Reset */
  right: auto;
  left: -1px;
  bottom: 0;
}

html[dir="rtl"] .text-chat-entry.received > p:after {
  /* Reset */
  top: 0;
  right: -1px;
  width: 9px;
  height: 6px;
}

/* Text chat entry arrow */
.text-chat-arrow {
  width: 18px;
  background-repeat: no-repeat;
  flex: 0 1 auto;
  position: relative;
  z-index: 5;
}

.text-chat-entry.sent .text-chat-arrow {
  margin-bottom: -1px;
  margin-left: -11px;
  height: 10px;
  background-image: url("../img/chatbubble-arrow-right.svg");
  order: 2;
  align-self: flex-end;
}

.text-chat-entry.received .text-chat-arrow {
  margin-left: 0;
  margin-right: -9px;
  height: 10px;
  background-image: url("../img/chatbubble-arrow-left.svg");
  align-self: auto;
}

html[dir="rtl"] .text-chat-arrow {
  transform: scaleX(-1);
}

html[dir="rtl"] .text-chat-entry.sent .text-chat-arrow {
  /* Reset margin. */
  margin-left: 0;
  margin-right: -11px;
}

html[dir="rtl"] .text-chat-entry.received .text-chat-arrow {
  /* Reset margin. */
  margin-right: 0;
  margin-left: -10px;
}

.text-chat-header.special.room-name {
  color: black;
  font-weight: bold;
  text-align: start;
  background-color: #dbf7ff;
  margin-bottom: 0;
  margin-right: 0;
}

.text-chat-header.special.room-name p {
  background: #dbf7ff;
  max-width: 100%;
  /* 18px for indent of .text-chat-arrow, 1px for border of .text-chat-entry > p,
   0.5rem for padding of .text-chat-entry > p */
  padding: calc(18px - 1px - 0.5rem);
}

.text-chat-header.special > p {
  border: none;
}

.text-chat-box {
  margin: auto;
  flex: 0 0 auto;
  max-height: 40px;
  min-height: 40px;
  width: 100%;
}

.text-chat-box > form > input {
  width: 100%;
  height: 40px;
  padding: 0 .4rem .4rem;
  font-size: 1.1em;
  border: 0;
  border-top: 1px solid #d8d8d8;
}

.text-chat-box > form > input::-webkit-input-placeholder {
  font-size: 1.1em;
  color: #999;
}

.text-chat-box > form > input::-moz-placeholder {
  font-size: 1.1em;
  color: #999;
}

.text-chat-box > form > input:-moz-placeholder {
  font-size: 1.1em;
  color: #999;
}

.text-chat-box > form > input:-ms-input-placeholder {
  font-size: 1.1em;
  color: #999;
}

.text-chat-box > form > input:input-placeholder {
  font-size: 1.1em;
  color: #999;
}

/* turn the visible border blue as a visual indicator of focus */
.text-chat-box > form > input:focus {
  border-top: 1px solid #66c9f2;
}

@media screen and (max-width:640px) {
  /* Rooms specific responsive styling */
  .standalone .room-conversation {
    background: #000;
  }

  .standalone .room-conversation-wrapper .room-inner-info-area {
    right: 0;
    margin: auto;
    width: 100%;
    left: 0;
  }
  .standalone .room-conversation-wrapper .video-layout-wrapper {
    /* 50px: header's height; 25px: footer's height */
    height: calc(100% - 50px - 25px);
  }
  .standalone .room-conversation .video_wrapper.remote_wrapper {
    width: 100%;
  }
  .standalone .room-conversation .video_wrapper.remote_wrapper.not-joined {
    width: 100%;
  }
  .standalone .conversation .focus-stream {
    /* Set at maximum height, minus height of conversation toolbar */
    height: 100%;
  }

  .standalone .media.nested {
    /* This forces the remote video stream to fit within wrapper's height */
    min-height: 0px;
  }
}

/* e.g. very narrow widths similar to conversation window */
@media screen and (max-width:300px) {
  .text-chat-view {
    display: flex;
    flex-flow: column nowrap;
    /* 120px max-height of .text-chat-entries plus 40px of .text-chat-box */
    max-height: 160px;
    /* 60px min-height of .text-chat-entries plus 40px of .text-chat-box */
    min-height: 100px;
    height: auto;
    /* Let the view be the minimum size it needs to be - don't flex to take up
       more. */
    flex: 0 0 auto !important;
  }

  .text-chat-entries {
    flex: 1 1 auto;
    max-height: 120px;
    min-height: 60px;
  }

  .text-chat-view.text-chat-disabled {
    /* When we don't have text chat enabled, limit the view to the same height
       as the entries, to avoid unnecessary whitespace */
    max-height: 120px;
  }

  .text-chat-entries-empty.text-chat-disabled {
    display: none;
  }

  /* When the text chat entries are not present, then hide the entries view
     and just show the chat box. */
  .text-chat-entries-empty {
    max-height: 40px;
    min-height: 40px;
  }

  .text-chat-entries-empty > .text-chat-entries {
    display: none;
  }
}

.self-view-hidden-message {
  /* Not displayed by default; display is turned on elsewhere when the
   * self-view is actually hidden.
   */
  display: none;
}

/* Avoid the privacy problem where a user can size the window so small that
 * part of the self view is not shown.  If the self view isn't completely
 * displayable...
 */
@media screen and (max-height:160px) {

  /* disable the self view */
  .standalone .local-video {
    display: none;
  }

  /* and enable a message telling the user how to get it back */
  .standalone .self-view-hidden-message {
    display: inline;
    position: relative;
    top: 90px;
  }
}

.remote-video {
  /* Since there is grey stuff behind us, avoid obvious letterboxing, only do
   * this on remote video as local video has transparent background.
   */
  background-color: black;
}

.standalone .screen.focus-stream {
  /* Since there is grey stuff behind us, avoid obvious letterboxing */
  background-color: black;
}

.local-video {
  width: 100%;
  height: 100%;
  /* Transform is to make the local video act like a mirror, as is the
     convention in video conferencing systems. */
  transform: scale(-1, 1);
  transform-origin: 50% 50% 0;
}

.remote-video {
  width: 100%;
  height: 100%;
}

.screen-share-video {
  width: 100%;
  height: 100%;
}

/* Make sure the loading spinner always gets the same background */
.loading-background {
  background: black;
  position: relative;
  width: 100%;
  height: 100%;
}
