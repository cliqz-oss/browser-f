//
const Cc = Components.classes;
const Ci = Components.interfaces;
const Cu = Components.utils;

Cu.import("resource://gre/modules/Services.jsm");
Cu.import("resource:///modules/CustomizableUI.jsm");
Cu.import("resource://gre/modules/XPCOMUtils.jsm");
Cu.import("resource://gre/modules/AppConstants.jsm");

const prefs = Cc["@mozilla.org/preferences-service;1"].getService(Ci.nsIPrefBranch);
const env = Cc['@mozilla.org/process/environment;1'].getService(Ci.nsIEnvironment);

// Disable Sync
lockPref("browser.syncPromoViewsLeftMap", JSON.stringify({bookmarks:0, passwords:0, addons:0}));

CustomizableUI.destroyWidget("pocket-button");
CustomizableUI.destroyWidget("web-apps-button");
CustomizableUI.destroyWidget("search-container");
CustomizableUI.destroyWidget("searchbar");

CustomizableUI.destroyWidget("loop-button");
lockPref("loop.enabled", false);

lockPref("browser.pocket.enabled", false);
lockPref("browser.selfsupport.url", "");

// Disable Mozilla's tracking protection
lockPref("privacy.trackingprotection.enabled", false);
lockPref("privacy.trackingprotection.pbmode.enabled", false);

// Cliqz updates
pref("app.update.url", "https://updatecheck.cliqz.com/update/3/%PRODUCT%/%VERSION%/%BUILD_ID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/update.xml");
pref("app.update.certs.1.issuerName", "CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US");
pref("app.update.certs.1.commonName", "*.cliqz.com");
pref("app.update.certs.2.issuerName", "CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US");
pref("app.update.certs.2.commonName", "*.cliqz.com");

// From distribution.ini (old days)
lockPref("distribution.id", AppConstants.MOZ_APP_NAME);
lockPref("distribution.about", "Cliqz");
lockPref("distribution.version", AppConstants.MOZ_APP_VERSION_DISPLAY);

pref("browser.uitour.enabled", false);

// Use up to 4 processes for webpages rendering (e10s-multi)
pref("dom.ipc.processCount", 4);

// Disable Safe Mode trigger on start
lockPref("toolkit.startup.max_resumed_crashes", -1);

// Disable Slow Startup message
lockPref("browser.slowStartup.notificationDisabled", true);

// Never show search bar near address bar
lockPref("browser.search.widget.inNavBar", false);

// Turn off thumbnails for New Tab (not used in Cliqz browser)
pref("browser.pagethumbnails.capturing_disabled", true);

try {
  prefs.getBoolPref("extensions.cliqz.listed");
} catch (e) {
  // setting default
  prefs.setBoolPref("extensions.cliqz.listed", false);
}

// Preferences for Ultra private mode.

// Check if the environment is ultra private mode.
if (env.exists('MOZ_CLIQZ_PRIVATE_MODE') && !!env.get('MOZ_CLIQZ_PRIVATE_MODE')) {
  // # Default Preferences
  // # Tor Browser Bundle
  // # Do not edit this file.

  // Please maintain unit tests at ./tbb-tests/browser_tor_TB4.js

  // Disable initial homepage notifications
  pref("browser.search.update", false);
  pref("browser.rights.3.shown", true);
  pref("startup.homepage_welcome_url", "");
  pref("startup.homepage_welcome_url.additional", "");
  // Not set Windows 10 users would get a special introduction on first start.
  pref("browser.usedOnWindows10", true);

  // Set a generic, default URL that will be opened in a tab after an update.
  // Typically, this will not be used; instead, the <update> element within
  // each update manifest should contain attributes similar to:
  //   actions="showURL"
  //   openURL="https://blog.torproject.org/tor-browser-55a2-released"
  pref("startup.homepage_override_url", "");

  // Try to nag a bit more about updates: Pop up a restart dialog an hour after the initial dialog
  pref("app.update.promptWaitTime", 3600);
  pref("app.update.badge", true);
  pref("extensions.hotfix.id", ""); // Bug 16837: Disable hotfix updates as they may cause compat issues

  // #ifdef XP_WIN
  // // For now, disable staged updates on Windows (see #18292).
  // pref("app.update.staging.enabled", false);
  // #endif

  // No need to contact the Kinto-based blocklist system in addition to the old
  // one which is still used, see bug 22071.
  pref("services.blocklist.update_enabled", false);

  // Disable "Slow startup" warnings and associated disk history
  // (bug #13346)
  pref("browser.slowStartup.notificationDisabled", true);
  pref("browser.slowStartup.maxSamples", 0);
  pref("browser.slowStartup.samples", 0);

  // Disable the "Refresh" prompt that is displayed for stale profiles.
  pref("browser.disableResetPrompt", true);

  // Disk activity: Disable Browsing History Storage
  pref("browser.privatebrowsing.autostart", true);
  pref("browser.cache.disk.enable", false);
  pref("browser.cache.offline.enable", false);
  pref("permissions.memory_only", true);
  pref("network.cookie.lifetimePolicy", 2);
  pref("browser.download.manager.retention", 1);
  pref("security.nocertdb", true);

  // Disk activity: TBB Directory Isolation
  pref("browser.download.useDownloadDir", false);
  pref("browser.shell.checkDefaultBrowser", false);
  pref("browser.download.manager.addToRecentDocs", false);

  // Misc privacy: Disk
  pref("signon.rememberSignons", false);
  pref("browser.formfill.enable", false);
  pref("signon.autofillForms", false);
  pref("browser.sessionstore.privacy_level", 2);
  pref("media.cache_size", 0);

  // Misc privacy: Remote
  pref("browser.send_pings", false);
  pref("geo.enabled", false);
  pref("geo.wifi.uri", "");
  pref("browser.search.suggest.enabled", false);
  pref("browser.safebrowsing.enabled", false);
  pref("browser.safebrowsing.malware.enabled", false);
  pref("browser.safebrowsing.phishing.enabled", false);
  pref("browser.safebrowsing.downloads.enabled", false);
  pref("browser.safebrowsing.downloads.remote.enabled", false);
  pref("browser.safebrowsing.blockedURIs.enabled", false);
  pref("browser.safebrowsing.downloads.remote.url", "");
  pref("browser.safebrowsing.provider.google.updateURL", "");
  pref("browser.safebrowsing.provider.google.gethashURL", "");
  pref("browser.safebrowsing.provider.google4.updateURL", "");
  pref("browser.safebrowsing.provider.google4.gethashURL", "");
  pref("browser.safebrowsing.provider.mozilla.updateURL", "");
  pref("browser.safebrowsing.provider.mozilla.gethashURL", "");
  pref("browser.download.manager.scanWhenDone", false); // prevents AV remote reporting of downloads
  pref("extensions.ui.lastCategory", "addons://list/extension");
  pref("datareporting.healthreport.service.enabled", false); // Yes, all three of these must be set
  pref("datareporting.healthreport.uploadEnabled", false);
  pref("datareporting.policy.dataSubmissionEnabled", false);
  // Don't fetch a localized remote page that Tor Browser interacts with, see
  // #16727. And, yes, it is "reportUrl" and not "reportURL".
  pref("datareporting.healthreport.about.reportUrl", "data:text/plain,");
  // Make sure Selfsupport and Unified Telemetry are really disabled, see: #18738.
  pref("datareporting.healthreport.about.reportUrlUnified", "data:text/plain,");
  pref("browser.selfsupport.enabled", false);
  pref("browser.selfsupport.url", "");
  pref("toolkit.telemetry.unified", false);
  // No experiments, use Tor Browser. See 21797.
  pref("experiments.enabled", false);
  // Disable the UITour backend so there is no chance that a remote page
  // can use it to confuse Tor Browser users.
  pref("browser.uitour.enabled", false);
  pref("browser.syncPromoViewsLeftMap", "{\"addons\":0, \"passwords\":0, \"bookmarks\":0}"); // Don't promote sync
  pref("services.sync.engine.prefs", false); // Never sync prefs, addons, or tabs with other browsers
  pref("services.sync.engine.addons", false);
  pref("services.sync.engine.tabs", false);
  pref("services.sync.ui.hidden", true);
  pref("extensions.getAddons.cache.enabled", false); // https://blog.mozilla.org/addons/how-to-opt-out-of-add-on-metadata-updates/
  pref("browser.newtabpage.directory.ping", "data:text/plain,"); // Bug 16316 - Avoid potential confusion over tiles for now.
  pref("browser.newtabpage.directory.source", "data:text/plain,"); // Bug 16316 - Avoid potential confusion over tiles for now.
  pref("browser.newtabpage.enhanced", false); // Bug 16316 - Avoid potential confusion over tiles for now.
  pref("browser.newtabpage.introShown", true); // Bug 16316 - Avoid potential confusion over tiles for now.
  pref("browser.newtabpage.preload", false); // Bug 16316 - Avoid potential confusion over tiles for now.
  pref("browser.newtabpage.remote", false); // Bug 21685: Disable remote new tab pages
  pref("browser.search.countryCode", "US"); // The next three prefs disable GeoIP search lookups (#16254)
  pref("browser.search.region", "US");
  pref("browser.search.geoip.url", "");
  pref("browser.fixup.alternate.enabled", false); // Bug #16783: Prevent .onion fixups
  // Make sure there is no Tracking Protection active in Tor Browser, see: #17898.
  pref("privacy.trackingprotection.pbmode.enabled", false);
  // Disable the Pocket extension (Bug #18886)
  pref("browser.pocket.enabled", false);
  pref("browser.pocket.api", "");
  pref("browser.pocket.site", "");
  pref("network.http.referer.hideOnionSource", true);

  // Disable Social API and related stuff (Bug #13612)
  pref("social.directories", "");
  pref("social.remote-install.enabled", false);
  pref("social.share.activationPanelEnabled", false);
  pref("social.shareDirectory", "");
  pref("social.toast-notifications.enabled", false);
  pref("social.whitelist", "");

  // Fingerprinting
  pref("webgl.min_capability_mode", true);
  pref("webgl.disable-extensions", true);
  pref("webgl.disable-fail-if-major-performance-caveat", true);
  pref("webgl.enable-webgl2", false);
  pref("dom.network.enabled",false); // fingerprinting due to differing OS implementations
  pref("gfx.downloadable_fonts.fallback_delay", -1);
  pref("general.appname.override", "Netscape");
  pref("general.appversion.override", "5.0 (Windows)");
  pref("general.oscpu.override", "Windows NT 6.1");
  pref("general.platform.override", "Win32");
  pref("general.useragent.override", "Mozilla/5.0 (Windows NT 6.1; rv:52.0) Gecko/20100101 Firefox/52.0");
  pref("general.productSub.override", "20100101");
  pref("general.buildID.override", "20100101");
  pref("browser.startup.homepage_override.buildID", "20100101");
  pref("general.useragent.vendor", "");
  pref("general.useragent.vendorSub", "");
  pref("dom.enable_performance", false);
  pref("plugin.expose_full_path", false);
  pref("browser.zoom.siteSpecific", false);
  pref("intl.charset.default", "windows-1252");
  pref("browser.link.open_newwindow.restriction", 0); // Bug 9881: Open popups in new tabs (to avoid fullscreen popups)
  pref("dom.gamepad.enabled", false); // bugs.torproject.org/13023
  pref("javascript.use_us_english_locale", true);
  // pref("intl.accept_languages", "en-us, en"); // Set by Torbutton
  // pref("intl.accept_charsets", "iso-8859-1,*,utf-8"); // Set by Torbutton
  // pref("intl.charsetmenu.browser.cache", "UTF-8"); // Set by Torbutton
  // Disable video statistics fingerprinting vector (bug 15757)
  pref("media.video_stats.enabled", false);
  // Disable device sensors as possible fingerprinting vector (bug 15758)
  pref("device.sensors.enabled", false);
  pref("dom.enable_resource_timing", false); // Bug 13024: To hell with this API
  pref("dom.enable_user_timing", false); // Bug 16336: To hell with this API
  pref("privacy.resistFingerprinting", true);
  pref("dom.event.highrestimestamp.enabled", true); // Bug #17046: "Highres" (but truncated) timestamps prevent uptime leaks
  pref("privacy.suppressModifierKeyEvents", true); // Bug #17009: Suppress ALT and SHIFT events"
  pref("ui.use_standins_for_native_colors", true); // https://bugzilla.mozilla.org/232227
  // Make Reader View users uniform if they really want to use that feature. See
  // bug 18950 for more details.
  pref("browser.reader.detectedFirstArticle", true);
  pref("reader.parse-on-load.enabled", false);
  pref("privacy.use_utc_timezone", true);
  pref("media.webspeech.synth.enabled", false); // Bug 10283: Disable SpeechSynthesis API
  pref("dom.webaudio.enabled", false); // Bug 13017: Disable Web Audio API
  pref("dom.maxHardwareConcurrency", 1); // Bug 21675: Spoof single-core cpu
  pref("dom.w3c_touch_events.enabled", 0); // Bug 10286: Always disable Touch API

  // Third party stuff
  pref("privacy.firstparty.isolate", true); // Always enforce first party isolation
  pref("network.cookie.cookieBehavior", 1);
  pref("security.enable_tls_session_tickets", false);
  pref("network.http.spdy.enabled", false); // Stores state and may have keepalive issues (both fixable)
  pref("network.http.spdy.enabled.v2", false); // Seems redundant, but just in case
  pref("network.http.spdy.enabled.v3", false); // Seems redundant, but just in case
  pref("network.http.spdy.enabled.v3-1", false); // Seems redundant, but just in case
  pref("network.http.spdy.enabled.http2", false); // Temporarily disabled pending implementation review
  pref("network.http.spdy.enabled.http2draft", false); // Temporarily disabled pending implementation review
  pref("network.predictor.enabled", false); // Temporarily disabled. See https://bugs.torproject.org/16633
  pref("network.http.altsvc.enabled", false); // Temporarily disabled. See https://bugs.torproject.org/16673
  pref("network.http.altsvc.oe", false); // Temporarily disabled. See https://bugs.torproject.org/16673

  // Proxy and proxy security
  pref("network.proxy.socks", "127.0.0.1");
  pref("network.proxy.socks_port", 9170);
  pref("network.proxy.socks_remote_dns", true);
  pref("network.proxy.no_proxies_on", ""); // For fingerprinting and local service vulns (#10419)
  pref("network.proxy.type", 1);
  pref("network.security.ports.banned", "9050,9051,9150,9151,9170,9171");
  pref("network.dns.disablePrefetch", true);
  pref("network.protocol-handler.external-default", false);
  pref("network.protocol-handler.external.mailto", false);
  pref("network.protocol-handler.external.news", false);
  pref("network.protocol-handler.external.nntp", false);
  pref("network.protocol-handler.external.snews", false);
  pref("network.protocol-handler.warn-external.mailto", true);
  pref("network.protocol-handler.warn-external.news", true);
  pref("network.protocol-handler.warn-external.nntp", true);
  pref("network.protocol-handler.warn-external.snews", true);
  // Make sure we don't have any GIO supported protocols (defense in depth
  // measure)
  pref("network.gio.supported-protocols", "");
  pref("plugin.disable", true); // Disable to search plugins on first start
  pref("plugins.click_to_play", true);
  pref("plugin.state.flash", 1);
  pref("plugins.hide_infobar_for_missing_plugin", true);
  pref("plugins.hideMissingPluginsNotification", true);
  pref("media.peerconnection.enabled", false); // Disable WebRTC interfaces
  // Disables media devices but only if `media.peerconnection.enabled` is set to
  // `false` as well. (see bug 16328 for this defense-in-depth measure)
  pref("media.navigator.enabled", false);
  // GMPs: We make sure they don't show up on the Add-on panel and confuse users.
  // And the external update/donwload server must not get pinged. We apply a
  // clever solution for https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=769716.
  pref("media.gmp-provider.enabled", false);
  pref("media.gmp-manager.url.override", "data:text/plain,");
  // Since ESR52 it is not enough anymore to block pinging the GMP update/download
  // server. There is a local fallback that must be blocked now as well. See:
  // https://bugzilla.mozilla.org/show_bug.cgi?id=1267495.
  pref("media.gmp-manager.updateEnabled", false);
  // Mozilla is relying on preferences to make sure no DRM blob is downloaded and
  // run. Even though those prefs should be set correctly by specifying
  // --disable-eme (which we do), we disable all of them here as well for defense
  // in depth.
  pref("browser.eme.ui.enabled", false);
  pref("media.gmp-eme-adobe.visible", false);
  pref("media.gmp-eme-adobe.enabled", false);
  pref("media.gmp-widevinecdm.visible", false);
  pref("media.gmp-widevinecdm.enabled", false);
  pref("media.eme.enabled", false);
  pref("media.eme.apiVisible", false);
  // WebIDE can bypass proxy settings for remote debugging. It also downloads
  // some additional addons that we have not reviewed. Turn all that off.
  pref("devtools.webide.autoinstallADBHelper", false);
  pref("devtools.webide.autoinstallFxdtAdapters", false);
  pref("devtools.webide.enabled", false);
  pref("devtools.appmanager.enabled", false);
  // The in-browser debugger for debugging chrome code is not coping with our
  // restrictive DNS look-up policy. We use "127.0.0.1" instead of "localhost" as
  // a workaround. See bug 16523 for more details.
  pref("devtools.debugger.chrome-debugging-host", "127.0.0.1");
  // Disable mozTCPSocket for sure (bug 18863)
  pref("dom.mozTCPSocket.enabled", false);

  // Security slider
  pref("svg.in-content.enabled", true);
  pref("mathml.disabled", false);
  // Until we address at least the linkability concerns in #19417 let's disable
  // asmjs.
  pref("javascript.options.asmjs", false);
  // Mozilla keeps still finding critical bugs in Graphite code. Disable it for
  // now, see bug 21726.
  pref("gfx.font_rendering.graphite.enabled", false);

  // Network and performance
  pref("network.http.pipelining", true);
  pref("network.http.pipelining.aggressive", true);
  pref("network.http.pipelining.maxrequests", 12);
  pref("network.http.pipelining.ssl", true);
  pref("network.http.proxy.pipelining", true);
  pref("security.ssl.enable_false_start", true);
  pref("network.http.connection-retry-timeout", 0);
  pref("network.http.max-persistent-connections-per-proxy", 256);
  pref("network.http.pipelining.reschedule-timeout", 15000);
  pref("network.http.pipelining.read-timeout", 60000);
  // Hacked pref: Now means "Attempt to pipeline at least this many requests together"
  pref("network.http.pipelining.max-optimistic-requests", 3);
  pref("security.ssl.disable_session_identifiers", true);
  pref("network.manage-offline-status", false);
  // No need to leak things to Mozilla, see bug 21790
  pref("network.captive-portal-service.enabled", false);
  // As a "defense in depth" measure, configure an empty push server URL (the
  // DOM Push features are disabled by default via other prefs).
  pref("dom.push.serverURL", "");

  // Extension support
  pref("extensions.autoDisableScopes", 0);
  pref("extensions.bootstrappedAddons", "{}");
  pref("extensions.checkCompatibility.4.*", false);
  pref("extensions.databaseSchema", 3);
  pref("extensions.enabledAddons", "https-everywhere%40eff.org:3.1.4,%7B73a6fe31-595d-460b-a920-fcc0f8843232%7D:2.6.6.1,torbutton%40torproject.org:1.5.2,ubufox%40ubuntu.com:2.6,tor-launcher%40torproject.org:0.1.1pre-alpha,%7B972ce4c6-7e08-4474-a285-3208198ce6fd%7D:17.0.5");
  pref("extensions.enabledItems", "langpack-en-US@firefox.mozilla.org:,{73a6fe31-595d-460b-a920-fcc0f8843232}:1.9.9.57,{e0204bd5-9d31-402b-a99d-a6aa8ffebdca}:1.2.4,{972ce4c6-7e08-4474-a285-3208198ce6fd}:3.5.8");
  pref("extensions.enabledScopes", 1);
  pref("extensions.pendingOperations", false);
  pref("xpinstall.whitelist.add", "");
  pref("xpinstall.whitelist.add.36", "");
  // We don't know what extensions Mozilla is advertising to our users and we
  // don't want to have some random Google Analytics script running either on the
  // about:addons page, see bug 22073 and 22900.
  pref("extensions.getAddons.showPane", false);

  // Toolbar layout
  pref("browser.uiCustomization.state", "{\"placements\":{\"PanelUI-contents\":[\"edit-controls\",\"zoom-controls\",\"new-window-button\",\"save-page-button\",\"print-button\",\"bookmarks-menu-button\",\"history-panelmenu\",\"find-button\",\"preferences-button\",\"add-ons-button\",\"developer-button\",\"https-everywhere-button\",\"downloads-button\"],\"addon-bar\":[\"addonbar-closebutton\",\"status-bar\"],\"PersonalToolbar\":[\"personal-bookmarks\"],\"nav-bar\":[\"noscript-tbb\",\"torbutton-button\",\"urlbar-container\",\"search-container\",\"webrtc-status-button\",\"loop-button\"],\"TabsToolbar\":[\"tabbrowser-tabs\",\"new-tab-button\",\"alltabs-button\"],\"toolbar-menubar\":[\"menubar-items\"]},\"seen\":[],\"dirtyAreaCache\":[\"PersonalToolbar\",\"nav-bar\",\"TabsToolbar\",\"toolbar-menubar\",\"PanelUI-contents\",\"addon-bar\"],\"currentVersion\":4,\"newElementCount\":0}");

  // Putting the search engine prefs into this file to fix #11236.
  // Default search engine
  pref("browser.search.defaultenginename", "data:text/plain,browser.search.defaultenginename=DuckDuckGo");
  // Make sure we use the same search engine regardless of locale
  pref("browser.search.geoSpecificDefaults", false);

  // Search engine order (order displayed in the search bar dropdown)
  // Somewhat surprisingly we get some random behavior if we specify more than
  // two search engines as below. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=1126722 for details.
  pref("browser.search.order.extra.1", "DuckDuckGo");
  pref("browser.search.order.extra.2", "YouTube");

  // Hacks/workarounds: Direct2D seems to crash w/ lots of video cards w/ MinGW?
  // Nvida cards also experience crashes without the second pref set to disabled
  pref("gfx.direct2d.disabled", true);
  pref("layers.acceleration.disabled", true);

  // Audio_data is deprecated in future releases, but still present
  // in FF24. This is a dangerous combination (spotted by iSec)
  pref("media.audio_data.enabled", false);

  // If true, remote JAR files will not be opened, regardless of content type
  // Patch written by Jeff Gibat (iSEC).
  pref("network.jar.block-remote-files", true);

  // Enable TLS 1.1 and 1.2:
  // https://trac.torproject.org/projects/tor/ticket/11253
  pref("security.tls.version.max", 3);
  // Disable RC4 fallback. This will go live in Firefox 44, Chrome and IE/Edge:
  // https://blog.mozilla.org/security/2015/09/11/deprecating-the-rc4-cipher/
  pref("security.tls.unrestricted_rc4_fallback", false);

  // Enforce certificate pinning, see: https://bugs.torproject.org/16206
  pref("security.cert_pinning.enforcement_level", 2);

  // Don't allow MitM via Microsoft Family Safety, see bug 21686
  pref("security.family_safety.mode", 0);

  // Enforce SHA1 deprecation, see: bug 18042.
  pref("security.pki.sha1_enforcement_level", 2);

  // Avoid report TLS errors to Mozilla. We might want to repurpose this feature
  // one day to help detecting bad relays (which is bug 19119). For now we just
  // hide the checkbox, see bug 22072.
  pref("security.ssl.errorReporting.enabled", false);

  // Workaround for https://bugs.torproject.org/13579. Progress on
  // `about:downloads` is only shown if the following preference is set to `true`
  // in case the download panel got removed from the toolbar.
  pref("browser.download.panel.shown", true);

  // Treat .onions as secure
  pref("dom.securecontext.whitelist_onions", true);

  // If we are bundling fonts, whitelist those bundled fonts, and restrict system fonts to a selection.

  ///////// CLIQZ PREFS /////////

  pref("app.update.auto", false);
  pref("app.update.enabled", false);

  // From https://support.mozilla.org/en-US/kb/how-stop-firefox-making-automatic-connections
  pref("browser.aboutHomeSnippets.updateUrl", "");
  pref("media.gmp-gmpopenh264.enabled", false);
  pref("network.prefetch-next", false);

  pref("browser.casting.enabled", false);

  // Cliqz onion as default
  pref("browser.search.defaultenginename", "data:text/plain,browser.search.defaultenginename=CliqzOnion");
  pref("browser.search.defaultenginename.US", "data:text/plain,browser.search.defaultenginename=CliqzOnion");
  // pref("browser.startup.homepage", "about:newtab");

  pref("datareporting.policy.dataSubmissionPolicyAcceptedVersion", 2);
  pref("datareporting.policy.dataSubmissionPolicyNotifiedTime", "1521818106267"); // TODO: is this ok?
  pref("datareporting.policy.firstRunURL", "");

  // Navigation API., don't think they are needed.
  pref("dom.battery.enabled", false);
  pref("dom.enable_performance_observer", false);

  // VR related prefs. Do not need them.
  pref("dom.vr.enabled", false);
  pref("dom.vr.openvr.enabled", false);
  pref("dom.vr.osvr.enabled", false);
  pref("dom.vr.poseprediction.enabled", false);

  pref("experiments.manifest.uri", "");
  pref("experiments.supported", false);

  pref("extensions.installDistroAddons", false);
  pref("extensions.update.enabled", false);

  pref("lightweightThemes.selectedThemeID", "firefox-compact-light@mozilla.org");
  pref("lightweightThemes.update.enabled", false);

  pref("toolkit.telemetry.enabled", false);
  pref("toolkit.telemetry.enabled", false);
  pref("toolkit.telemetry.prompted", 2);
  pref("toolkit.telemetry.rejected", true);

  // Disable webnotification API. It leaks domains on MAC.
  pref("dom.webnotifications.enabled", false);
  pref("dom.webnotifications.serviceworker.enabled", false);

  // DEV
  // pref("extensions.enabledScopes", 5);
  // pref("xpinstall.signatures.required", false);
  // pref("extensions.legacy.enabled", true);
  // pref("extensions.autoDisableScopes", 10);
  // pref("security.sandbox.content.level", 2);


  // pref("extensions.cliqz.cliqz-adb", 1);
  // pref("extensions.cliqz.showConsoleLogs", false);
  pref("extensions.cliqz.onion-modev2", true); // Replace this in the current beta version of extension.

  ///////// CLIQZ PREFS /////////
  // Should disable unloading the modules itself. NO ABTEST should be allowed to load them again.
  lockPref("extensions.cliqz.MarketAnalysisEnabled", false);
  lockPref("extensions.cliqzhistory-analyzer.enabled", false);
  lockPref("extensions.cliqz.humanWeb", false);
  lockPref("extensions.cliqz.greenads", "disabled");
  lockPref("extensions.cliqz.offers2UserEnabled", false);
  lockPref("extensions.cliqz.offers2FeatureEnabled", false);
  lockPref("extensions.cliqz.modules.offers-cc.enabled", false);
  lockPref("extensions.cliqz.modules.antitracking.enabled", false); // Locked because in order for anti-tracking to work it needs to save data to disk.
  lockPref("extensions.cliqz.modules.antitracking-blocker.enabled", false);
  lockPref("extensions.cliqz.modules.history.enabled", false);
  lockPref("extensions.cliqz.modules.pairing.enabled", false);
  lockPref("extensions.cliqz.modules.human-web.enabled", false);
  lockPref("extensions.cliqz.modules.cookie-monster.enabled", false);
  lockPref("extensions.modules.context-search.enabled", false);
  lockPref("extensions.cliqz.modules.hpnv2.enabled", false);
  lockPref("extensions.cliqz.proxyNetwork", false);
  lockPref("extensions.cliqz.modules.tor.enabled", false);
  lockPref("extensions.cliqz.session", '');



  lockPref("extensions.cliqz.onion-mode", true);

  ///////// CLIQZ PREFS /////////
  lockPref("extensions.cliqz.modules.core-cliqz.enabled", false);
  lockPref("extensions.cliqz.modules.geolocation.enabled", false);
  lockPref("extensions.cliqz.modules.last-query.enabled", false);
  lockPref("extensions.cliqz.modules.human-web.enabled", false);
  lockPref("extensions.cliqz.modules.anti-phishing.enabled", false);
  lockPref("extensions.cliqz.modules.context-menu.enabled", false);
  lockPref("extensions.cliqz.modules.freshtab.enabled", false);
  lockPref("extensions.cliqz.modules.antitracking.enabled", false);
  lockPref("extensions.cliqz.modules.webrequest-pipeline.enabled", false);
  lockPref("extensions.cliqz.modules.performance.enabled", false);
  lockPref("extensions.cliqz.modules.hpn.enabled", false);
  lockPref("extensions.cliqz.modules.offers-v2.enabled", false);
  lockPref("extensions.cliqz.modules.history-analyzer.enabled", false);
  lockPref("extensions.cliqz.modules.offers-debug.enabled", false);
  lockPref("extensions.cliqz.modules.browser-panel.enabled", false);
  lockPref("extensions.cliqz.modules.message-center.enabled", false);
  lockPref("extensions.cliqz.modules.offboarding.enabled", false);
  lockPref("extensions.cliqz.modules.anolysis.enabled", false);
  lockPref("extensions.cliqz.modules.anolysis-cc.enabled", false);
  lockPref("extensions.cliqz.modules.abtests.enabled", false);
  lockPref("extensions.cliqz.modules.context-search.enabled", false);
  lockPref("extensions.cliqz.modules.privacy-dashboard.enabled", false);
  lockPref("extensions.cliqz.modules.adblocker.enabled", false);
  lockPref("extensions.cliqz.modules.https-everywhere.enabled", false);
  lockPref("extensions.cliqz.modules.onboarding-v3.enabled", false);
  lockPref("extensions.cliqz.modules.type-filter.enabled", false);
  lockPref("extensions.cliqz.modules.history.enabled", false);
  lockPref("extensions.cliqz.modules.offers-cc.enabled", false);
  lockPref("extensions.cliqz.modules.video-downloader.enabled", false);
  lockPref("extensions.cliqz.modules.market-analysis.enabled", false);
  lockPref("extensions.cliqz.modules.p2p.enabled", false);
  lockPref("extensions.cliqz.modules.proxyPeer.enabled", false);
  lockPref("extensions.cliqz.modules.pairing.enabled", false);
  lockPref("extensions.cliqz.modules.antitracking-blocker.enabled", false);
  lockPref("extensions.cliqz.modules.search.enabled", false);
  lockPref("extensions.cliqz.modules.cookie-monster.enabled", false);
  lockPref("extensions.cliqz.modules.hpnv2.enabled", false);
  lockPref("extensions.cliqz.modules.privacy.enabled", false);

  // Should enable adblocker?
  pref("extensions.cliqz.cliqz-adb", 1);
  pref("extensions.cliqz.freshtab.blueTheme.enabled", false);
}
